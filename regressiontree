import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor,plot_tree
from sklearn.ensemble import BaggingRegressor
from sklearn.model_selection import cross_validate
from sklearn.pipeline import Pipeline
from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, r2_score
#from google.colab import drive
#drive.mount('/content/drive')

#Import .csv file and convert to dataframe.
df = pd.read_csv('your content here')

y = df['util_score']
X = df.drop(['util_score'],axis=1)
X_train, X_test, y_train, y_test = train_test_split(X,y,train_size=0.8)

dtr = BaggingRegressor(estimator=DecisionTreeRegressor(max_depth=10), n_estimators=100)

dtr.fit(X_train,y_train)

train_score = dtr.score(X_train,y_train)

cross_validate(dtr, X_train, y_train, cv=5)

test_score = dtr.score(X_test,y_test)

dtr.get_params()

params = {'model__max_depth' : [2,3,4,5,6,7,8,9,10],
        'model__criterion' : ['squared_error', 'absolute_error'],
        'model__random_state' : [40]}
        
pipe = Pipeline([('model', dtr)])
y_pred = pipe.predict(X_test)

mae = mean_absolute_error(y_test,y_pred)
map = mean_absolute_percentage_error(y_test,y_pred)
r2 = r2_score(y_test,y_pred)

print('Train Score: ', train_score,
      '\nTest Score: ', test_score,
      '\nMean Absolute Error: ', mae,
      '\nMean Absolute % Error: ', map,
      '\nr2 score: ', r2)
